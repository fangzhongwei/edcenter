// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Ed.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RpcEd;

public interface EdServiceEndpointPrx extends Ice.ObjectPrx
{
    public EncryptResponse encrypt(String traceId, String raw);

    public EncryptResponse encrypt(String traceId, String raw, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw, Ice.Callback __cb);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw, Callback_EdServiceEndpoint_encrypt __cb);

    public Ice.AsyncResult begin_encrypt(String traceId, String raw, java.util.Map<String, String> __ctx, Callback_EdServiceEndpoint_encrypt __cb);

    public Ice.AsyncResult begin_encrypt(String traceId,
                                         String raw,
                                         IceInternal.Functional_GenericCallback1<EncryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_encrypt(String traceId,
                                         String raw,
                                         IceInternal.Functional_GenericCallback1<EncryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                         IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_encrypt(String traceId,
                                         String raw,
                                         java.util.Map<String, String> __ctx,
                                         IceInternal.Functional_GenericCallback1<EncryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_encrypt(String traceId,
                                         String raw,
                                         java.util.Map<String, String> __ctx,
                                         IceInternal.Functional_GenericCallback1<EncryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                         IceInternal.Functional_BoolCallback __sentCb);

    public EncryptResponse end_encrypt(Ice.AsyncResult __result);

    public DecryptResponse decrypt(String traceId, String ticket);

    public DecryptResponse decrypt(String traceId, String ticket, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket, Ice.Callback __cb);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket, Callback_EdServiceEndpoint_decrypt __cb);

    public Ice.AsyncResult begin_decrypt(String traceId, String ticket, java.util.Map<String, String> __ctx, Callback_EdServiceEndpoint_decrypt __cb);

    public Ice.AsyncResult begin_decrypt(String traceId,
                                         String ticket,
                                         IceInternal.Functional_GenericCallback1<DecryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_decrypt(String traceId,
                                         String ticket,
                                         IceInternal.Functional_GenericCallback1<DecryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                         IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_decrypt(String traceId,
                                         String ticket,
                                         java.util.Map<String, String> __ctx,
                                         IceInternal.Functional_GenericCallback1<DecryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_decrypt(String traceId,
                                         String ticket,
                                         java.util.Map<String, String> __ctx,
                                         IceInternal.Functional_GenericCallback1<DecryptResponse> __responseCb,
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                         IceInternal.Functional_BoolCallback __sentCb);

    public DecryptResponse end_decrypt(Ice.AsyncResult __result);
}
